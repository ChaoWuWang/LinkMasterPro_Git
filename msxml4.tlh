//           GENERATED SOURCE FILE - DO NOT EDIT                  
//                                                                
// This source file was generated by the Borland C++ compiler     
// in response to a #import directive for the type library :      
// 		C                                                         
//                                                                
#pragma once                                                      
#pragma pack(push, 8)                                             
#include <comdef.h>                                               

namespace MSXML2 {

// Forward references

struct _xml_error;
struct __declspec(uuid("a4f96ed0-f829-476e-81c0-cdc7bd2a0802"))
  /*interface*/ ISAXXMLReader;
struct __declspec(uuid("99bca7bd-e8c4-4d5f-a0cf-6d907901ff07"))
  /*interface*/ ISAXEntityResolver;
struct __declspec(uuid("1545cdfa-9e4e-4497-a8a4-2bf7d0112c44"))
  /*interface*/ ISAXContentHandler;
struct __declspec(uuid("9b7e472a-0de4-4640-bff3-84d38a051c31"))
  /*interface*/ ISAXLocator;
struct __declspec(uuid("f078abe1-45d2-4832-91ea-4466ce2f25c9"))
  /*interface*/ ISAXAttributes;
struct __declspec(uuid("e15c1baf-afb3-4d60-8c36-19a8c45defed"))
  /*interface*/ ISAXDTDHandler;
struct __declspec(uuid("a60511c4-ccf5-479e-98a3-dc8dc545b7d0"))
  /*interface*/ ISAXErrorHandler;
struct __declspec(uuid("70409222-ca09-4475-acb8-40312fe8d145"))
  /*interface*/ ISAXXMLFilter;
struct __declspec(uuid("7f85d5f5-47a8-4497-bda5-84ba04819ea6"))
  /*interface*/ ISAXLexicalHandler;
struct __declspec(uuid("862629ac-771a-47b2-8337-4e6843c1be90"))
  /*interface*/ ISAXDeclHandler;
struct __declspec(uuid("2b8de2fe-8d2d-11d1-b2fc-00c04fd915a9"))
  /*interface*/ IXMLDocument2;
struct __declspec(uuid("948c5ad3-c58d-11d0-9c0b-00c04fc99c8e"))
  /*interface*/ IXMLError;
struct __declspec(uuid("c90352f6-643c-4fbc-bb23-e996eb2d51fd"))
  /*interface*/ IMXNamespaceManager;
struct __declspec(uuid("2933bf8f-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMImplementation;
struct __declspec(uuid("2933bf80-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMNode;
struct __declspec(uuid("2933bf82-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMNodeList;
struct __declspec(uuid("2933bf83-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMNamedNodeMap;
struct __declspec(uuid("2933bf81-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMDocument;
struct __declspec(uuid("2933bf8b-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMDocumentType;
struct __declspec(uuid("2933bf86-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMElement;
struct __declspec(uuid("2933bf85-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMAttribute;
struct __declspec(uuid("3efaa413-272f-11d2-836f-0000f87a7782"))
  /*interface*/ IXMLDOMDocumentFragment;
struct __declspec(uuid("2933bf87-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMText;
struct __declspec(uuid("2933bf84-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMCharacterData;
struct __declspec(uuid("2933bf88-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMComment;
struct __declspec(uuid("2933bf8a-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMCDATASection;
struct __declspec(uuid("2933bf89-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMProcessingInstruction;
struct __declspec(uuid("2933bf8e-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMEntityReference;
struct __declspec(uuid("3efaa426-272f-11d2-836f-0000f87a7782"))
  /*interface*/ IXMLDOMParseError;
struct __declspec(uuid("2933bf95-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMDocument2;
struct __declspec(uuid("373984c8-b845-449b-91e7-45ac83036ade"))
  /*interface*/ IXMLDOMSchemaCollection;
struct __declspec(uuid("2933bf8c-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMNotation;
struct __declspec(uuid("2933bf8d-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXMLDOMEntity;
struct __declspec(uuid("3efaa425-272f-11d2-836f-0000f87a7782"))
  /*interface*/ IXTLRuntime;
struct __declspec(uuid("2933bf93-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXSLTemplate;
struct __declspec(uuid("2933bf92-7b36-11d2-b20e-00c04f983e60"))
  /*interface*/ IXSLProcessor;
struct __declspec(uuid("8c033caa-6cd6-4f73-b728-4531af74945f"))
  /*interface*/ IVBSAXXMLReader;
struct __declspec(uuid("0c05d096-f45b-4aca-ad1a-aa0bc25518dc"))
  /*interface*/ IVBSAXEntityResolver;
struct __declspec(uuid("2ed7290a-4dd5-4b46-bb26-4e4155e77faa"))
  /*interface*/ IVBSAXContentHandler;
struct __declspec(uuid("796e7ac5-5aa2-4eff-acad-3faaf01a3288"))
  /*interface*/ IVBSAXLocator;
struct __declspec(uuid("10dc0586-132b-4cac-8bb3-db00ac8b7ee0"))
  /*interface*/ IVBSAXAttributes;
struct __declspec(uuid("24fb3297-302d-4620-ba39-3a732d850558"))
  /*interface*/ IVBSAXDTDHandler;
struct __declspec(uuid("d963d3fe-173c-4862-9095-b92f66995f52"))
  /*interface*/ IVBSAXErrorHandler;
struct __declspec(uuid("1299eb1b-5b88-433e-82de-82ca75ad4e04"))
  /*interface*/ IVBSAXXMLFilter;
struct __declspec(uuid("032aac35-8c0e-4d9d-979f-e3b702935576"))
  /*interface*/ IVBSAXLexicalHandler;
struct __declspec(uuid("e8917260-7579-4be1-b5dd-7afbfa6f077b"))
  /*interface*/ IVBSAXDeclHandler;
struct __declspec(uuid("4d7ff4ba-1565-4ea8-94e1-6e724a46f98d"))
  /*interface*/ IMXWriter;
struct __declspec(uuid("f10d27cc-3ec0-415c-8ed8-77ab1c5e7262"))
  /*interface*/ IMXAttributes;
struct __declspec(uuid("808f4e35-8d5a-4fbe-8466-33a41279ed30"))
  /*interface*/ IMXReaderControl;
struct __declspec(uuid("fa4bb38c-faf9-4cca-9302-d1dd0fe520db"))
  /*interface*/ IMXSchemaDeclHandler;
struct __declspec(uuid("50ea08b7-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaElement;
struct __declspec(uuid("50ea08b5-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaParticle;
struct __declspec(uuid("50ea08b3-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaItem;
struct __declspec(uuid("50ea08b4-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchema;
struct __declspec(uuid("50ea08b2-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaItemCollection;
struct __declspec(uuid("50ea08b1-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaStringCollection;
struct __declspec(uuid("50ea08b8-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaType;
struct __declspec(uuid("50ea08b9-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaComplexType;
struct __declspec(uuid("50ea08bc-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaAny;
struct __declspec(uuid("50ea08bb-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaModelGroup;
struct __declspec(uuid("50ea08b0-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ IXMLDOMSchemaCollection2;
struct __declspec(uuid("50ea08b6-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaAttribute;
struct __declspec(uuid("50ea08ba-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaAttributeGroup;
struct __declspec(uuid("50ea08bd-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaIdentityConstraint;
struct __declspec(uuid("50ea08be-dd1b-4664-9a50-c2f40f4bd79a"))
  /*interface*/ ISchemaNotation;
struct __declspec(uuid("65725580-9b5d-11d0-9bfe-00c04fc99c8e"))
  /*interface*/ IXMLElementCollection;
struct __declspec(uuid("f52e2b61-18a1-11d1-b105-00805f49916b"))
  /*interface*/ IXMLDocument;
struct __declspec(uuid("3f7f31ac-e15f-11d0-9c25-00c04fc99c8e"))
  /*interface*/ IXMLElement;
struct __declspec(uuid("2b8de2ff-8d2d-11d1-b2fc-00c04fd915a9"))
  /*interface*/ IXMLElement2;
struct __declspec(uuid("d4d4a0fc-3b73-11d1-b2b4-00c04fb92596"))
  /*interface*/ IXMLAttribute;
struct __declspec(uuid("aa634fc7-5888-44a7-a257-3a47150d3a0e"))
  /*interface*/ IXMLDOMSelection;
struct __declspec(uuid("3efaa427-272f-11d2-836f-0000f87a7782"))
  /*interface*/ XMLDOMDocumentEvents;
struct __declspec(uuid("310afa62-0575-11d2-9ca9-0060b0ec3d39"))
  /*interface*/ IDSOControl;
struct __declspec(uuid("ed8c108d-4349-11d2-91a4-00c04f7969e8"))
  /*interface*/ IXMLHTTPRequest;
struct __declspec(uuid("2e9196bf-13ba-4dd4-91ca-6c571f281495"))
  /*interface*/ IServerXMLHTTPRequest;
struct __declspec(uuid("2e01311b-c322-4b0a-bd77-b90cfdc8dce7"))
  /*interface*/ IServerXMLHTTPRequest2;
struct __declspec(uuid("c90352f4-643c-4fbc-bb23-e996eb2d51fd"))
  /*interface*/ IMXNamespacePrefixes;
struct __declspec(uuid("c90352f5-643c-4fbc-bb23-e996eb2d51fd"))
  /*interface*/ IVBMXNamespaceManager;
struct /* coclass */DOMDocument;
struct /* coclass */DOMDocument26;
struct /* coclass */DOMDocument30;
struct /* coclass */DOMDocument40;
struct /* coclass */FreeThreadedDOMDocument;
struct /* coclass */FreeThreadedDOMDocument26;
struct /* coclass */FreeThreadedDOMDocument30;
struct /* coclass */FreeThreadedDOMDocument40;
struct /* coclass */XMLSchemaCache;
struct /* coclass */XMLSchemaCache26;
struct /* coclass */XMLSchemaCache30;
struct /* coclass */XMLSchemaCache40;
struct /* coclass */XSLTemplate;
struct /* coclass */XSLTemplate26;
struct /* coclass */XSLTemplate30;
struct /* coclass */XSLTemplate40;
struct /* coclass */DSOControl;
struct /* coclass */DSOControl26;
struct /* coclass */DSOControl30;
struct /* coclass */DSOControl40;
struct /* coclass */XMLHTTP;
struct /* coclass */XMLHTTP26;
struct /* coclass */XMLHTTP30;
struct /* coclass */XMLHTTP40;
struct /* coclass */ServerXMLHTTP;
struct /* coclass */ServerXMLHTTP30;
struct /* coclass */ServerXMLHTTP40;
struct /* coclass */SAXXMLReader;
struct /* coclass */SAXXMLReader30;
struct /* coclass */SAXXMLReader40;
struct /* coclass */MXXMLWriter;
struct /* coclass */MXXMLWriter30;
struct /* coclass */MXXMLWriter40;
struct /* coclass */MXHTMLWriter;
struct /* coclass */MXHTMLWriter30;
struct /* coclass */MXHTMLWriter40;
struct /* coclass */SAXAttributes;
struct /* coclass */SAXAttributes30;
struct /* coclass */SAXAttributes40;
struct /* coclass */MXNamespaceManager;
struct /* coclass */MXNamespaceManager40;
struct /* coclass */XMLDocument;

//
// Smart pointer declarations
//

_COM_SMARTPTR_TYPEDEF( ISAXXMLReader , __uuidof( ISAXXMLReader ) );
_COM_SMARTPTR_TYPEDEF( ISAXEntityResolver , __uuidof( ISAXEntityResolver ) );
_COM_SMARTPTR_TYPEDEF( ISAXContentHandler , __uuidof( ISAXContentHandler ) );
_COM_SMARTPTR_TYPEDEF( ISAXLocator , __uuidof( ISAXLocator ) );
_COM_SMARTPTR_TYPEDEF( ISAXAttributes , __uuidof( ISAXAttributes ) );
_COM_SMARTPTR_TYPEDEF( ISAXDTDHandler , __uuidof( ISAXDTDHandler ) );
_COM_SMARTPTR_TYPEDEF( ISAXErrorHandler , __uuidof( ISAXErrorHandler ) );
_COM_SMARTPTR_TYPEDEF( ISAXXMLFilter , __uuidof( ISAXXMLFilter ) );
_COM_SMARTPTR_TYPEDEF( ISAXLexicalHandler , __uuidof( ISAXLexicalHandler ) );
_COM_SMARTPTR_TYPEDEF( ISAXDeclHandler , __uuidof( ISAXDeclHandler ) );
_COM_SMARTPTR_TYPEDEF( IXMLDocument2 , __uuidof( IXMLDocument2 ) );
_COM_SMARTPTR_TYPEDEF( IXMLError , __uuidof( IXMLError ) );
_COM_SMARTPTR_TYPEDEF( IMXNamespaceManager , __uuidof( IMXNamespaceManager ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMImplementation , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMNode , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMNodeList , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMNamedNodeMap , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMDocument , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMDocumentType , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMElement , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMAttribute , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMDocumentFragment , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMText , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMCharacterData , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMComment , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMCDATASection , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMProcessingInstruction , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMEntityReference , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMParseError , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMDocument2 , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMSchemaCollection , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMNotation , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMEntity , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXTLRuntime , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXSLTemplate , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXSLProcessor , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IVBSAXXMLReader , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IVBSAXEntityResolver , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IVBSAXContentHandler , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IVBSAXLocator , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IVBSAXAttributes , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IVBSAXDTDHandler , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IVBSAXErrorHandler , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IVBSAXXMLFilter , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IVBSAXLexicalHandler , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IVBSAXDeclHandler , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IMXWriter , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IMXAttributes , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IMXReaderControl , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IMXSchemaDeclHandler , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaElement , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaParticle , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaItem , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchema , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaItemCollection , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaStringCollection , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaType , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaComplexType , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaAny , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaModelGroup , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMSchemaCollection2 , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaAttribute , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaAttributeGroup , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaIdentityConstraint , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ISchemaNotation , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLElementCollection , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDocument , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLElement , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLElement2 , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLAttribute , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLDOMSelection , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( XMLDOMDocumentEvents , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IDSOControl , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IXMLHTTPRequest , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IServerXMLHTTPRequest , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IServerXMLHTTPRequest2 , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IMXNamespacePrefixes , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IVBMXNamespaceManager , __uuidof( IDispatch ) );

//
// Type library items
//

enum tagDOMNodeType 
{
  NODE_INVALID = 0,
  NODE_ELEMENT = 1,
  NODE_ATTRIBUTE = 2,
  NODE_TEXT = 3,
  NODE_CDATA_SECTION = 4,
  NODE_ENTITY_REFERENCE = 5,
  NODE_ENTITY = 6,
  NODE_PROCESSING_INSTRUCTION = 7,
  NODE_COMMENT = 8,
  NODE_DOCUMENT = 9,
  NODE_DOCUMENT_TYPE = 10,
  NODE_DOCUMENT_FRAGMENT = 11,
  NODE_NOTATION = 12
};

enum _SOMITEMTYPE 
{
  SOMITEM_SCHEMA = 4096,
  SOMITEM_ATTRIBUTE = 4097,
  SOMITEM_ATTRIBUTEGROUP = 4098,
  SOMITEM_NOTATION = 4099,
  SOMITEM_IDENTITYCONSTRAINT = 4352,
  SOMITEM_KEY = 4353,
  SOMITEM_KEYREF = 4354,
  SOMITEM_UNIQUE = 4355,
  SOMITEM_ANYTYPE = 8192,
  SOMITEM_DATATYPE = 8448,
  SOMITEM_DATATYPE_ANYTYPE = 8449,
  SOMITEM_DATATYPE_ANYURI = 8450,
  SOMITEM_DATATYPE_BASE64BINARY = 8451,
  SOMITEM_DATATYPE_BOOLEAN = 8452,
  SOMITEM_DATATYPE_BYTE = 8453,
  SOMITEM_DATATYPE_DATE = 8454,
  SOMITEM_DATATYPE_DATETIME = 8455,
  SOMITEM_DATATYPE_DAY = 8456,
  SOMITEM_DATATYPE_DECIMAL = 8457,
  SOMITEM_DATATYPE_DOUBLE = 8458,
  SOMITEM_DATATYPE_DURATION = 8459,
  SOMITEM_DATATYPE_ENTITIES = 8460,
  SOMITEM_DATATYPE_ENTITY = 8461,
  SOMITEM_DATATYPE_FLOAT = 8462,
  SOMITEM_DATATYPE_HEXBINARY = 8463,
  SOMITEM_DATATYPE_ID = 8464,
  SOMITEM_DATATYPE_IDREF = 8465,
  SOMITEM_DATATYPE_IDREFS = 8466,
  SOMITEM_DATATYPE_INT = 8467,
  SOMITEM_DATATYPE_INTEGER = 8468,
  SOMITEM_DATATYPE_LANGUAGE = 8469,
  SOMITEM_DATATYPE_LONG = 8470,
  SOMITEM_DATATYPE_MONTH = 8471,
  SOMITEM_DATATYPE_MONTHDAY = 8472,
  SOMITEM_DATATYPE_NAME = 8473,
  SOMITEM_DATATYPE_NCNAME = 8474,
  SOMITEM_DATATYPE_NEGATIVEINTEGER = 8475,
  SOMITEM_DATATYPE_NMTOKEN = 8476,
  SOMITEM_DATATYPE_NMTOKENS = 8477,
  SOMITEM_DATATYPE_NONNEGATIVEINTEGER = 8478,
  SOMITEM_DATATYPE_NONPOSITIVEINTEGER = 8479,
  SOMITEM_DATATYPE_NORMALIZEDSTRING = 8480,
  SOMITEM_DATATYPE_NOTATION = 8481,
  SOMITEM_DATATYPE_POSITIVEINTEGER = 8482,
  SOMITEM_DATATYPE_QNAME = 8483,
  SOMITEM_DATATYPE_SHORT = 8484,
  SOMITEM_DATATYPE_STRING = 8485,
  SOMITEM_DATATYPE_TIME = 8486,
  SOMITEM_DATATYPE_TOKEN = 8487,
  SOMITEM_DATATYPE_UNSIGNEDBYTE = 8488,
  SOMITEM_DATATYPE_UNSIGNEDINT = 8489,
  SOMITEM_DATATYPE_UNSIGNEDLONG = 8490,
  SOMITEM_DATATYPE_UNSIGNEDSHORT = 8491,
  SOMITEM_DATATYPE_YEAR = 8492,
  SOMITEM_DATATYPE_YEARMONTH = 8493,
  SOMITEM_DATATYPE_ANYSIMPLETYPE = 8703,
  SOMITEM_SIMPLETYPE = 8704,
  SOMITEM_COMPLEXTYPE = 9216,
  SOMITEM_PARTICLE = 16384,
  SOMITEM_ANY = 16385,
  SOMITEM_ANYATTRIBUTE = 16386,
  SOMITEM_ELEMENT = 16387,
  SOMITEM_GROUP = 16640,
  SOMITEM_ALL = 16641,
  SOMITEM_CHOICE = 16642,
  SOMITEM_SEQUENCE = 16643,
  SOMITEM_EMPTYPARTICLE = 16644,
  SOMITEM_NULL = 2048,
  SOMITEM_NULL_TYPE = 10240,
  SOMITEM_NULL_ANY = 18433,
  SOMITEM_NULL_ANYATTRIBUTE = 18434,
  SOMITEM_NULL_ELEMENT = 18435
};

enum _SCHEMADERIVATIONMETHOD 
{
  SCHEMADERIVATIONMETHOD_EMPTY = 0,
  SCHEMADERIVATIONMETHOD_SUBSTITUTION = 1,
  SCHEMADERIVATIONMETHOD_EXTENSION = 2,
  SCHEMADERIVATIONMETHOD_RESTRICTION = 4,
  SCHEMADERIVATIONMETHOD_LIST = 8,
  SCHEMADERIVATIONMETHOD_UNION = 16,
  SCHEMADERIVATIONMETHOD_ALL = 255,
  SCHEMADERIVATIONMETHOD_NONE = 256
};

enum _SCHEMATYPEVARIETY 
{
  SCHEMATYPEVARIETY_NONE = -1,
  SCHEMATYPEVARIETY_ATOMIC = 0,
  SCHEMATYPEVARIETY_LIST = 1,
  SCHEMATYPEVARIETY_UNION = 2
};

enum _SCHEMAWHITESPACE 
{
  SCHEMAWHITESPACE_NONE = -1,
  SCHEMAWHITESPACE_PRESERVE = 0,
  SCHEMAWHITESPACE_REPLACE = 1,
  SCHEMAWHITESPACE_COLLAPSE = 2
};

enum _SCHEMAPROCESSCONTENTS 
{
  SCHEMAPROCESSCONTENTS_NONE = 0,
  SCHEMAPROCESSCONTENTS_SKIP = 1,
  SCHEMAPROCESSCONTENTS_LAX = 2,
  SCHEMAPROCESSCONTENTS_STRICT = 3
};

enum _SCHEMACONTENTTYPE 
{
  SCHEMACONTENTTYPE_EMPTY = 0,
  SCHEMACONTENTTYPE_TEXTONLY = 1,
  SCHEMACONTENTTYPE_ELEMENTONLY = 2,
  SCHEMACONTENTTYPE_MIXED = 3
};

enum _SCHEMAUSE 
{
  SCHEMAUSE_OPTIONAL = 0,
  SCHEMAUSE_PROHIBITED = 1,
  SCHEMAUSE_REQUIRED = 2
};

enum tagXMLEMEM_TYPE 
{
  XMLELEMTYPE_ELEMENT = 0,
  XMLELEMTYPE_TEXT = 1,
  XMLELEMTYPE_COMMENT = 2,
  XMLELEMTYPE_DOCUMENT = 3,
  XMLELEMTYPE_DTD = 4,
  XMLELEMTYPE_PI = 5,
  XMLELEMTYPE_OTHER = 6
};

enum _SERVERXMLHTTP_OPTION 
{
  SXH_OPTION_URL = -1,
  SXH_OPTION_URL_CODEPAGE = 0,
  SXH_OPTION_ESCAPE_PERCENT_IN_URL = 1,
  SXH_OPTION_IGNORE_SERVER_SSL_CERT_ERROR_FLAGS = 2,
  SXH_OPTION_SELECT_CLIENT_SSL_CERT = 3
};

enum _SXH_SERVER_CERT_OPTION 
{
  SXH_SERVER_CERT_IGNORE_UNKNOWN_CA = 256,
  SXH_SERVER_CERT_IGNORE_WRONG_USAGE = 512,
  SXH_SERVER_CERT_IGNORE_CERT_CN_INVALID = 4096,
  SXH_SERVER_CERT_IGNORE_CERT_DATE_INVALID = 8192,
  SXH_SERVER_CERT_IGNORE_ALL_SERVER_ERRORS = 13056
};

enum _SXH_PROXY_SETTING 
{
  SXH_PROXY_SET_DEFAULT = 0,
  SXH_PROXY_SET_PRECONFIG = 0,
  SXH_PROXY_SET_DIRECT = 1,
  SXH_PROXY_SET_PROXY = 2
};

struct _xml_error 
{
  unsigned int _nLine;
  BSTR _pchBuf;
  unsigned int _cchBuf;
  unsigned int _ich;
  BSTR _pszFound;
  BSTR _pszExpected;
  unsigned long _reserved1;
  unsigned long _reserved2;
};

typedef tagDOMNodeType DOMNodeType;
typedef _SOMITEMTYPE SOMITEMTYPE;
typedef _SCHEMADERIVATIONMETHOD SCHEMADERIVATIONMETHOD;
typedef _SCHEMATYPEVARIETY SCHEMATYPEVARIETY;
typedef _SCHEMAWHITESPACE SCHEMAWHITESPACE;
typedef _SCHEMAPROCESSCONTENTS SCHEMAPROCESSCONTENTS;
typedef _SCHEMACONTENTTYPE SCHEMACONTENTTYPE;
typedef _SCHEMAUSE SCHEMAUSE;
typedef tagXMLEMEM_TYPE XMLELEM_TYPE;
typedef _SERVERXMLHTTP_OPTION SERVERXMLHTTP_OPTION;
typedef _SXH_SERVER_CERT_OPTION SXH_SERVER_CERT_OPTION;
typedef _SXH_PROXY_SETTING SXH_PROXY_SETTING;
struct __declspec(uuid("c90352f5-643c-4fbc-bb23-e996eb2d51fd"))
 IVBMXNamespaceManager : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT PutallowOverride(
    boolean rhs );
  boolean GetallowOverride( );
  HRESULT reset( );
  HRESULT pushContext( );
  HRESULT pushNodeContext(
    struct IXMLDOMNode* contextNode,
    boolean fDeep );
  HRESULT popContext( );
  HRESULT declarePrefix(
    BSTR prefix,
    BSTR namespaceURI );
  struct IMXNamespacePrefixes* getDeclaredPrefixes( );
  struct IMXNamespacePrefixes* getPrefixes(
    BSTR namespaceURI );
  VARIANT getURI(
    BSTR prefix );
  VARIANT getURIFromNode(
    BSTR strPrefix,
    struct IXMLDOMNode* contextNode );
};
struct __declspec(uuid("c90352f4-643c-4fbc-bb23-e996eb2d51fd"))
 IMXNamespacePrefixes : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getitem(
    long index );
  long Getlength( );
};
struct __declspec(uuid("2e01311b-c322-4b0a-bd77-b90cfdc8dce7"))
 IServerXMLHTTPRequest2 : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT open(
    BSTR bstrMethod,
    BSTR bstrUrl,
    VARIANT varAsync,
    VARIANT bstrUser,
    VARIANT bstrPassword );
  HRESULT setRequestHeader(
    BSTR bstrHeader,
    BSTR bstrValue );
  BSTR getResponseHeader(
    BSTR bstrHeader );
  BSTR getAllResponseHeaders( );
  HRESULT send(
    VARIANT varBody );
  HRESULT abort( );
  long Getstatus( );
  BSTR GetstatusText( );
  IDispatch* GetresponseXML( );
  BSTR GetresponseText( );
  VARIANT GetresponseBody( );
  VARIANT GetresponseStream( );
  long GetreadyState( );
  HRESULT Putonreadystatechange(
    IDispatch* rhs );
  HRESULT setTimeouts(
    long resolveTimeout,
    long connectTimeout,
    long sendTimeout,
    long receiveTimeout );
  boolean waitForResponse(
    VARIANT timeoutInSeconds );
  VARIANT getOption(
    SERVERXMLHTTP_OPTION option );
  HRESULT setOption(
    SERVERXMLHTTP_OPTION option,
    VARIANT value );
  HRESULT setProxy(
    SXH_PROXY_SETTING proxySetting,
    VARIANT varProxyServer,
    VARIANT varBypassList );
  HRESULT setProxyCredentials(
    BSTR bstrUserName,
    BSTR bstrPassword );
};
struct __declspec(uuid("2e9196bf-13ba-4dd4-91ca-6c571f281495"))
 IServerXMLHTTPRequest : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT open(
    BSTR bstrMethod,
    BSTR bstrUrl,
    VARIANT varAsync,
    VARIANT bstrUser,
    VARIANT bstrPassword );
  HRESULT setRequestHeader(
    BSTR bstrHeader,
    BSTR bstrValue );
  BSTR getResponseHeader(
    BSTR bstrHeader );
  BSTR getAllResponseHeaders( );
  HRESULT send(
    VARIANT varBody );
  HRESULT abort( );
  long Getstatus( );
  BSTR GetstatusText( );
  IDispatch* GetresponseXML( );
  BSTR GetresponseText( );
  VARIANT GetresponseBody( );
  VARIANT GetresponseStream( );
  long GetreadyState( );
  HRESULT Putonreadystatechange(
    IDispatch* rhs );
  HRESULT setTimeouts(
    long resolveTimeout,
    long connectTimeout,
    long sendTimeout,
    long receiveTimeout );
  boolean waitForResponse(
    VARIANT timeoutInSeconds );
  VARIANT getOption(
    SERVERXMLHTTP_OPTION option );
  HRESULT setOption(
    SERVERXMLHTTP_OPTION option,
    VARIANT value );
};
struct __declspec(uuid("ed8c108d-4349-11d2-91a4-00c04f7969e8"))
 IXMLHTTPRequest : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT open(
    BSTR bstrMethod,
    BSTR bstrUrl,
    VARIANT varAsync,
    VARIANT bstrUser,
    VARIANT bstrPassword );
  HRESULT setRequestHeader(
    BSTR bstrHeader,
    BSTR bstrValue );
  BSTR getResponseHeader(
    BSTR bstrHeader );
  BSTR getAllResponseHeaders( );
  HRESULT send(
    VARIANT varBody );
  HRESULT abort( );
  long Getstatus( );
  BSTR GetstatusText( );
  IDispatch* GetresponseXML( );
  BSTR GetresponseText( );
  VARIANT GetresponseBody( );
  VARIANT GetresponseStream( );
  long GetreadyState( );
  HRESULT Putonreadystatechange(
    IDispatch* rhs );
};
struct __declspec(uuid("310afa62-0575-11d2-9ca9-0060b0ec3d39"))
 IDSOControl : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct IXMLDOMDocument* GetXMLDocument( );
  HRESULT PutXMLDocument(
    struct IXMLDOMDocument* rhs );
  long GetJavaDSOCompatible( );
  HRESULT PutJavaDSOCompatible(
    long rhs );
  long GetreadyState( );
};
struct __declspec(uuid("3efaa427-272f-11d2-836f-0000f87a7782"))
 XMLDOMDocumentEvents : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT ondataavailable( );
  HRESULT onreadystatechange( );
};
struct __declspec(uuid("aa634fc7-5888-44a7-a257-3a47150d3a0e"))
 IXMLDOMSelection : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct IXMLDOMNode* Getitem(
    long index );
  long Getlength( );
  struct IXMLDOMNode* nextNode( );
  HRESULT reset( );
  BSTR Getexpr( );
  HRESULT Putexpr(
    BSTR rhs );
  struct IXMLDOMNode* Getcontext( );
  HRESULT PutRefcontext(
    struct IXMLDOMNode* rhs );
  struct IXMLDOMNode* peekNode( );
  struct IXMLDOMNode* matches(
    struct IXMLDOMNode* pNode );
  struct IXMLDOMNode* removeNext( );
  HRESULT removeAll( );
  struct IXMLDOMSelection* clone( );
  VARIANT getProperty(
    BSTR name );
  HRESULT setProperty(
    BSTR name,
    VARIANT value );
};
struct __declspec(uuid("d4d4a0fc-3b73-11d1-b2b4-00c04fb92596"))
 IXMLAttribute : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR Getvalue( );
};
struct __declspec(uuid("2b8de2ff-8d2d-11d1-b2fc-00c04fd915a9"))
 IXMLElement2 : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GettagName( );
  HRESULT PuttagName(
    BSTR rhs );
  struct IXMLElement2* Getparent( );
  HRESULT setAttribute(
    BSTR strPropertyName,
    VARIANT PropertyValue );
  VARIANT getAttribute(
    BSTR strPropertyName );
  HRESULT removeAttribute(
    BSTR strPropertyName );
  struct IXMLElementCollection* Getchildren( );
  long Gettype( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  HRESULT addChild(
    struct IXMLElement2* pChildElem,
    long lIndex,
    long lReserved );
  HRESULT removeChild(
    struct IXMLElement2* pChildElem );
  struct IXMLElementCollection* Getattributes( );
};
struct __declspec(uuid("3f7f31ac-e15f-11d0-9c25-00c04fc99c8e"))
 IXMLElement : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GettagName( );
  HRESULT PuttagName(
    BSTR rhs );
  struct IXMLElement* Getparent( );
  HRESULT setAttribute(
    BSTR strPropertyName,
    VARIANT PropertyValue );
  VARIANT getAttribute(
    BSTR strPropertyName );
  HRESULT removeAttribute(
    BSTR strPropertyName );
  struct IXMLElementCollection* Getchildren( );
  long Gettype( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  HRESULT addChild(
    struct IXMLElement* pChildElem,
    long lIndex,
    long lReserved );
  HRESULT removeChild(
    struct IXMLElement* pChildElem );
};
struct __declspec(uuid("f52e2b61-18a1-11d1-b105-00805f49916b"))
 IXMLDocument : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct IXMLElement* Getroot( );
  BSTR Geturl( );
  HRESULT Puturl(
    BSTR rhs );
  long GetreadyState( );
  BSTR Getcharset( );
  HRESULT Putcharset(
    BSTR rhs );
  BSTR Getversion( );
  BSTR Getdoctype( );
  struct IXMLElement* createElement(
    VARIANT vType,
    VARIANT var1 );
};
struct __declspec(uuid("65725580-9b5d-11d0-9bfe-00c04fc99c8e"))
 IXMLElementCollection : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  long Getlength( );
  IDispatch* item(
    VARIANT var1,
    VARIANT var2 );
};
struct __declspec(uuid("50ea08be-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaNotation : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
  BSTR GetsystemIdentifier( );
  BSTR GetpublicIdentifier( );
};
struct __declspec(uuid("50ea08bd-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaIdentityConstraint : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
  BSTR Getselector( );
  struct ISchemaStringCollection* Getfields( );
  struct ISchemaIdentityConstraint* GetreferencedKey( );
};
struct __declspec(uuid("50ea08ba-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaAttributeGroup : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
  struct ISchemaAny* GetanyAttribute( );
  struct ISchemaItemCollection* Getattributes( );
};
struct __declspec(uuid("50ea08b6-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaAttribute : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
  struct ISchemaType* Gettype( );
  struct ISchemaComplexType* Getscope( );
  BSTR GetdefaultValue( );
  BSTR GetfixedValue( );
  SCHEMAUSE Getuse( );
  boolean GetisReference( );
};
struct __declspec(uuid("50ea08b0-dd1b-4664-9a50-c2f40f4bd79a"))
 IXMLDOMSchemaCollection2 : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT add(
    BSTR namespaceURI,
    VARIANT var );
  struct IXMLDOMNode* get(
    BSTR namespaceURI );
  HRESULT remove(
    BSTR namespaceURI );
  long Getlength( );
  BSTR GetnamespaceURI(
    long index );
  HRESULT addCollection(
    struct IXMLDOMSchemaCollection* otherCollection );
  HRESULT validate( );
  HRESULT PutvalidateOnLoad(
    boolean rhs );
  boolean GetvalidateOnLoad( );
  struct ISchema* getSchema(
    BSTR namespaceURI );
  struct ISchemaItem* getDeclaration(
    struct IXMLDOMNode* node );
};
struct __declspec(uuid("50ea08bb-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaModelGroup : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
  VARIANT GetminOccurs( );
  VARIANT GetmaxOccurs( );
  struct ISchemaItemCollection* Getparticles( );
};
struct __declspec(uuid("50ea08bc-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaAny : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
  VARIANT GetminOccurs( );
  VARIANT GetmaxOccurs( );
  struct ISchemaStringCollection* Getnamespaces( );
  SCHEMAPROCESSCONTENTS GetprocessContents( );
};
struct __declspec(uuid("50ea08b9-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaComplexType : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
  struct ISchemaItemCollection* GetbaseTypes( );
  SCHEMADERIVATIONMETHOD Getfinal( );
  SCHEMATYPEVARIETY Getvariety( );
  SCHEMADERIVATIONMETHOD GetderivedBy( );
  boolean isValid(
    BSTR data );
  BSTR GetminExclusive( );
  BSTR GetminInclusive( );
  BSTR GetmaxExclusive( );
  BSTR GetmaxInclusive( );
  VARIANT GettotalDigits( );
  VARIANT GetfractionDigits( );
  VARIANT Getlength( );
  VARIANT GetminLength( );
  VARIANT GetmaxLength( );
  struct ISchemaStringCollection* Getenumeration( );
  SCHEMAWHITESPACE Getwhitespace( );
  struct ISchemaStringCollection* Getpatterns( );
  boolean GetisAbstract( );
  struct ISchemaAny* GetanyAttribute( );
  struct ISchemaItemCollection* Getattributes( );
  SCHEMACONTENTTYPE GetcontentType( );
  struct ISchemaModelGroup* GetcontentModel( );
  SCHEMADERIVATIONMETHOD GetprohibitedSubstitutions( );
};
struct __declspec(uuid("50ea08b8-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaType : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
  struct ISchemaItemCollection* GetbaseTypes( );
  SCHEMADERIVATIONMETHOD Getfinal( );
  SCHEMATYPEVARIETY Getvariety( );
  SCHEMADERIVATIONMETHOD GetderivedBy( );
  boolean isValid(
    BSTR data );
  BSTR GetminExclusive( );
  BSTR GetminInclusive( );
  BSTR GetmaxExclusive( );
  BSTR GetmaxInclusive( );
  VARIANT GettotalDigits( );
  VARIANT GetfractionDigits( );
  VARIANT Getlength( );
  VARIANT GetminLength( );
  VARIANT GetmaxLength( );
  struct ISchemaStringCollection* Getenumeration( );
  SCHEMAWHITESPACE Getwhitespace( );
  struct ISchemaStringCollection* Getpatterns( );
};
struct __declspec(uuid("50ea08b1-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaStringCollection : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getitem(
    long index );
  long Getlength( );
};
struct __declspec(uuid("50ea08b2-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaItemCollection : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct ISchemaItem* Getitem(
    long index );
  struct ISchemaItem* itemByName(
    BSTR name );
  struct ISchemaItem* itemByQName(
    BSTR name,
    BSTR namespaceURI );
  long Getlength( );
};
struct __declspec(uuid("50ea08b4-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchema : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
  BSTR GettargetNamespace( );
  BSTR Getversion( );
  struct ISchemaItemCollection* Gettypes( );
  struct ISchemaItemCollection* Getelements( );
  struct ISchemaItemCollection* Getattributes( );
  struct ISchemaItemCollection* GetattributeGroups( );
  struct ISchemaItemCollection* GetmodelGroups( );
  struct ISchemaItemCollection* Getnotations( );
  struct ISchemaStringCollection* GetschemaLocations( );
};
struct __declspec(uuid("50ea08b3-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaItem : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
};
struct __declspec(uuid("50ea08b5-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaParticle : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
  VARIANT GetminOccurs( );
  VARIANT GetmaxOccurs( );
};
struct __declspec(uuid("50ea08b7-dd1b-4664-9a50-c2f40f4bd79a"))
 ISchemaElement : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Getname( );
  BSTR GetnamespaceURI( );
  struct ISchema* Getschema( );
  BSTR Getid( );
  SOMITEMTYPE GetitemType( );
  struct IVBSAXAttributes* GetunhandledAttributes( );
  boolean writeAnnotation(
    IUnknown* annotationSink );
  VARIANT GetminOccurs( );
  VARIANT GetmaxOccurs( );
  struct ISchemaType* Gettype( );
  struct ISchemaComplexType* Getscope( );
  BSTR GetdefaultValue( );
  BSTR GetfixedValue( );
  boolean GetisNillable( );
  struct ISchemaItemCollection* GetidentityConstraints( );
  struct ISchemaElement* GetsubstitutionGroup( );
  SCHEMADERIVATIONMETHOD GetsubstitutionGroupExclusions( );
  SCHEMADERIVATIONMETHOD GetdisallowedSubstitutions( );
  boolean GetisAbstract( );
  boolean GetisReference( );
};
struct __declspec(uuid("fa4bb38c-faf9-4cca-9302-d1dd0fe520db"))
 IMXSchemaDeclHandler : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT schemaElementDecl(
    struct ISchemaElement* oSchemaElement );
};
struct __declspec(uuid("808f4e35-8d5a-4fbe-8466-33a41279ed30"))
 IMXReaderControl : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT abort( );
  HRESULT resume( );
  HRESULT suspend( );
};
struct __declspec(uuid("f10d27cc-3ec0-415c-8ed8-77ab1c5e7262"))
 IMXAttributes : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT addAttribute(
    BSTR strURI,
    BSTR strLocalName,
    BSTR strQName,
    BSTR strType,
    BSTR strValue );
  HRESULT addAttributeFromIndex(
    VARIANT varAtts,
    int nIndex );
  HRESULT clear( );
  HRESULT removeAttribute(
    int nIndex );
  HRESULT setAttribute(
    int nIndex,
    BSTR strURI,
    BSTR strLocalName,
    BSTR strQName,
    BSTR strType,
    BSTR strValue );
  HRESULT setAttributes(
    VARIANT varAtts );
  HRESULT setLocalName(
    int nIndex,
    BSTR strLocalName );
  HRESULT setQName(
    int nIndex,
    BSTR strQName );
  HRESULT setType(
    int nIndex,
    BSTR strType );
  HRESULT setURI(
    int nIndex,
    BSTR strURI );
  HRESULT setValue(
    int nIndex,
    BSTR strValue );
};
struct __declspec(uuid("4d7ff4ba-1565-4ea8-94e1-6e724a46f98d"))
 IMXWriter : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT Putoutput(
    VARIANT rhs );
  VARIANT Getoutput( );
  HRESULT Putencoding(
    BSTR rhs );
  BSTR Getencoding( );
  HRESULT PutbyteOrderMark(
    boolean rhs );
  boolean GetbyteOrderMark( );
  HRESULT Putindent(
    boolean rhs );
  boolean Getindent( );
  HRESULT Putstandalone(
    boolean rhs );
  boolean Getstandalone( );
  HRESULT PutomitXMLDeclaration(
    boolean rhs );
  boolean GetomitXMLDeclaration( );
  HRESULT Putversion(
    BSTR rhs );
  BSTR Getversion( );
  HRESULT PutdisableOutputEscaping(
    boolean rhs );
  boolean GetdisableOutputEscaping( );
  HRESULT flush( );
};
struct __declspec(uuid("e8917260-7579-4be1-b5dd-7afbfa6f077b"))
 IVBSAXDeclHandler : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT elementDecl(
    BSTR* strName,
    BSTR* strModel );
  HRESULT attributeDecl(
    BSTR* strElementName,
    BSTR* strAttributeName,
    BSTR* strType,
    BSTR* strValueDefault,
    BSTR* strValue );
  HRESULT internalEntityDecl(
    BSTR* strName,
    BSTR* strValue );
  HRESULT externalEntityDecl(
    BSTR* strName,
    BSTR* strPublicId,
    BSTR* strSystemId );
};
struct __declspec(uuid("032aac35-8c0e-4d9d-979f-e3b702935576"))
 IVBSAXLexicalHandler : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT startDTD(
    BSTR* strName,
    BSTR* strPublicId,
    BSTR* strSystemId );
  HRESULT endDTD( );
  HRESULT startEntity(
    BSTR* strName );
  HRESULT endEntity(
    BSTR* strName );
  HRESULT startCDATA( );
  HRESULT endCDATA( );
  HRESULT comment(
    BSTR* strChars );
};
struct __declspec(uuid("1299eb1b-5b88-433e-82de-82ca75ad4e04"))
 IVBSAXXMLFilter : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct IVBSAXXMLReader* Getparent( );
  HRESULT PutRefparent(
    struct IVBSAXXMLReader* rhs );
};
struct __declspec(uuid("d963d3fe-173c-4862-9095-b92f66995f52"))
 IVBSAXErrorHandler : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT error(
    struct IVBSAXLocator* oLocator,
    BSTR* strErrorMessage,
    long nErrorCode );
  HRESULT fatalError(
    struct IVBSAXLocator* oLocator,
    BSTR* strErrorMessage,
    long nErrorCode );
  HRESULT ignorableWarning(
    struct IVBSAXLocator* oLocator,
    BSTR* strErrorMessage,
    long nErrorCode );
};
struct __declspec(uuid("24fb3297-302d-4620-ba39-3a732d850558"))
 IVBSAXDTDHandler : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT notationDecl(
    BSTR* strName,
    BSTR* strPublicId,
    BSTR* strSystemId );
  HRESULT unparsedEntityDecl(
    BSTR* strName,
    BSTR* strPublicId,
    BSTR* strSystemId,
    BSTR* strNotationName );
};
struct __declspec(uuid("10dc0586-132b-4cac-8bb3-db00ac8b7ee0"))
 IVBSAXAttributes : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  int Getlength( );
  BSTR getURI(
    int nIndex );
  BSTR getLocalName(
    int nIndex );
  BSTR getQName(
    int nIndex );
  int getIndexFromName(
    BSTR strURI,
    BSTR strLocalName );
  int getIndexFromQName(
    BSTR strQName );
  BSTR getType(
    int nIndex );
  BSTR getTypeFromName(
    BSTR strURI,
    BSTR strLocalName );
  BSTR getTypeFromQName(
    BSTR strQName );
  BSTR getValue(
    int nIndex );
  BSTR getValueFromName(
    BSTR strURI,
    BSTR strLocalName );
  BSTR getValueFromQName(
    BSTR strQName );
};
struct __declspec(uuid("796e7ac5-5aa2-4eff-acad-3faaf01a3288"))
 IVBSAXLocator : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  int GetcolumnNumber( );
  int GetlineNumber( );
  BSTR GetpublicId( );
  BSTR GetsystemId( );
};
struct __declspec(uuid("2ed7290a-4dd5-4b46-bb26-4e4155e77faa"))
 IVBSAXContentHandler : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT PutRefdocumentLocator(
    struct IVBSAXLocator* rhs );
  HRESULT startDocument( );
  HRESULT endDocument( );
  HRESULT startPrefixMapping(
    BSTR* strPrefix,
    BSTR* strURI );
  HRESULT endPrefixMapping(
    BSTR* strPrefix );
  HRESULT startElement(
    BSTR* strNamespaceURI,
    BSTR* strLocalName,
    BSTR* strQName,
    struct IVBSAXAttributes* oAttributes );
  HRESULT endElement(
    BSTR* strNamespaceURI,
    BSTR* strLocalName,
    BSTR* strQName );
  HRESULT characters(
    BSTR* strChars );
  HRESULT ignorableWhitespace(
    BSTR* strChars );
  HRESULT processingInstruction(
    BSTR* strTarget,
    BSTR* strData );
  HRESULT skippedEntity(
    BSTR* strName );
};
struct __declspec(uuid("0c05d096-f45b-4aca-ad1a-aa0bc25518dc"))
 IVBSAXEntityResolver : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  VARIANT resolveEntity(
    BSTR* strPublicId,
    BSTR* strSystemId );
};
struct __declspec(uuid("8c033caa-6cd6-4f73-b728-4531af74945f"))
 IVBSAXXMLReader : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  boolean getFeature(
    BSTR strName );
  HRESULT putFeature(
    BSTR strName,
    boolean fValue );
  VARIANT getProperty(
    BSTR strName );
  HRESULT putProperty(
    BSTR strName,
    VARIANT varValue );
  struct IVBSAXEntityResolver* GetentityResolver( );
  HRESULT PutRefentityResolver(
    struct IVBSAXEntityResolver* rhs );
  struct IVBSAXContentHandler* GetcontentHandler( );
  HRESULT PutRefcontentHandler(
    struct IVBSAXContentHandler* rhs );
  struct IVBSAXDTDHandler* GetdtdHandler( );
  HRESULT PutRefdtdHandler(
    struct IVBSAXDTDHandler* rhs );
  struct IVBSAXErrorHandler* GeterrorHandler( );
  HRESULT PutReferrorHandler(
    struct IVBSAXErrorHandler* rhs );
  BSTR GetbaseURL( );
  HRESULT PutbaseURL(
    BSTR rhs );
  BSTR GetsecureBaseURL( );
  HRESULT PutsecureBaseURL(
    BSTR rhs );
  HRESULT parse(
    VARIANT varInput );
  HRESULT parseURL(
    BSTR strURL );
};
struct __declspec(uuid("2933bf92-7b36-11d2-b20e-00c04f983e60"))
 IXSLProcessor : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT Putinput(
    VARIANT rhs );
  VARIANT Getinput( );
  struct IXSLTemplate* GetownerTemplate( );
  HRESULT setStartMode(
    BSTR mode,
    BSTR namespaceURI );
  BSTR GetstartMode( );
  BSTR GetstartModeURI( );
  HRESULT Putoutput(
    VARIANT rhs );
  VARIANT Getoutput( );
  boolean transform( );
  HRESULT reset( );
  long GetreadyState( );
  HRESULT addParameter(
    BSTR baseName,
    VARIANT parameter,
    BSTR namespaceURI );
  HRESULT addObject(
    IDispatch* obj,
    BSTR namespaceURI );
  struct IXMLDOMNode* Getstylesheet( );
};
struct __declspec(uuid("2933bf93-7b36-11d2-b20e-00c04f983e60"))
 IXSLTemplate : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT PutRefstylesheet(
    struct IXMLDOMNode* rhs );
  struct IXMLDOMNode* Getstylesheet( );
  struct IXSLProcessor* createProcessor( );
};
struct __declspec(uuid("3efaa425-272f-11d2-836f-0000f87a7782"))
 IXTLRuntime : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  long uniqueID(
    struct IXMLDOMNode* pNode );
  long depth(
    struct IXMLDOMNode* pNode );
  long childNumber(
    struct IXMLDOMNode* pNode );
  long ancestorChildNumber(
    BSTR bstrNodeName,
    struct IXMLDOMNode* pNode );
  long absoluteChildNumber(
    struct IXMLDOMNode* pNode );
  BSTR formatIndex(
    long lIndex,
    BSTR bstrFormat );
  BSTR formatNumber(
    double dblNumber,
    BSTR bstrFormat );
  BSTR formatDate(
    VARIANT varDate,
    BSTR bstrFormat,
    VARIANT varDestLocale );
  BSTR formatTime(
    VARIANT varTime,
    BSTR bstrFormat,
    VARIANT varDestLocale );
};
struct __declspec(uuid("2933bf8d-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMEntity : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  VARIANT GetpublicId( );
  VARIANT GetsystemId( );
  BSTR GetnotationName( );
};
struct __declspec(uuid("2933bf8c-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMNotation : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  VARIANT GetpublicId( );
  VARIANT GetsystemId( );
};
struct __declspec(uuid("373984c8-b845-449b-91e7-45ac83036ade"))
 IXMLDOMSchemaCollection : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT add(
    BSTR namespaceURI,
    VARIANT var );
  struct IXMLDOMNode* get(
    BSTR namespaceURI );
  HRESULT remove(
    BSTR namespaceURI );
  long Getlength( );
  BSTR GetnamespaceURI(
    long index );
  HRESULT addCollection(
    struct IXMLDOMSchemaCollection* otherCollection );
};
struct __declspec(uuid("2933bf95-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMDocument2 : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  struct IXMLDOMDocumentType* Getdoctype( );
  struct IXMLDOMImplementation* Getimplementation( );
  struct IXMLDOMElement* GetdocumentElement( );
  HRESULT PutRefdocumentElement(
    struct IXMLDOMElement* rhs );
  struct IXMLDOMElement* createElement(
    BSTR tagName );
  struct IXMLDOMDocumentFragment* createDocumentFragment( );
  struct IXMLDOMText* createTextNode(
    BSTR data );
  struct IXMLDOMComment* createComment(
    BSTR data );
  struct IXMLDOMCDATASection* createCDATASection(
    BSTR data );
  struct IXMLDOMProcessingInstruction* createProcessingInstruction(
    BSTR target,
    BSTR data );
  struct IXMLDOMAttribute* createAttribute(
    BSTR name );
  struct IXMLDOMEntityReference* createEntityReference(
    BSTR name );
  struct IXMLDOMNodeList* getElementsByTagName(
    BSTR tagName );
  struct IXMLDOMNode* createNode(
    VARIANT type,
    BSTR name,
    BSTR namespaceURI );
  struct IXMLDOMNode* nodeFromID(
    BSTR idString );
  boolean load(
    VARIANT xmlSource );
  long GetreadyState( );
  struct IXMLDOMParseError* GetparseError( );
  BSTR Geturl( );
  boolean Getasync( );
  HRESULT Putasync(
    boolean rhs );
  HRESULT abort( );
  boolean loadXML(
    BSTR bstrXML );
  HRESULT save(
    VARIANT destination );
  boolean GetvalidateOnParse( );
  HRESULT PutvalidateOnParse(
    boolean rhs );
  boolean GetresolveExternals( );
  HRESULT PutresolveExternals(
    boolean rhs );
  boolean GetpreserveWhiteSpace( );
  HRESULT PutpreserveWhiteSpace(
    boolean rhs );
  HRESULT Putonreadystatechange(
    VARIANT rhs );
  HRESULT Putondataavailable(
    VARIANT rhs );
  HRESULT Putontransformnode(
    VARIANT rhs );
  struct IXMLDOMSchemaCollection* Getnamespaces( );
  VARIANT Getschemas( );
  HRESULT PutRefschemas(
    VARIANT rhs );
  struct IXMLDOMParseError* validate( );
  HRESULT setProperty(
    BSTR name,
    VARIANT value );
  VARIANT getProperty(
    BSTR name );
};
struct __declspec(uuid("3efaa426-272f-11d2-836f-0000f87a7782"))
 IXMLDOMParseError : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  long GeterrorCode( );
  BSTR Geturl( );
  BSTR Getreason( );
  BSTR GetsrcText( );
  long Getline( );
  long Getlinepos( );
  long Getfilepos( );
};
struct __declspec(uuid("2933bf8e-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMEntityReference : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
};
struct __declspec(uuid("2933bf89-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMProcessingInstruction : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  BSTR Gettarget( );
  BSTR Getdata( );
  HRESULT Putdata(
    BSTR rhs );
};
struct __declspec(uuid("2933bf8a-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMCDATASection : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  BSTR Getdata( );
  HRESULT Putdata(
    BSTR rhs );
  long Getlength( );
  BSTR substringData(
    long offset,
    long count );
  HRESULT appendData(
    BSTR data );
  HRESULT insertData(
    long offset,
    BSTR data );
  HRESULT deleteData(
    long offset,
    long count );
  HRESULT replaceData(
    long offset,
    long count,
    BSTR data );
  struct IXMLDOMText* splitText(
    long offset );
};
struct __declspec(uuid("2933bf88-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMComment : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  BSTR Getdata( );
  HRESULT Putdata(
    BSTR rhs );
  long Getlength( );
  BSTR substringData(
    long offset,
    long count );
  HRESULT appendData(
    BSTR data );
  HRESULT insertData(
    long offset,
    BSTR data );
  HRESULT deleteData(
    long offset,
    long count );
  HRESULT replaceData(
    long offset,
    long count,
    BSTR data );
};
struct __declspec(uuid("2933bf84-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMCharacterData : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  BSTR Getdata( );
  HRESULT Putdata(
    BSTR rhs );
  long Getlength( );
  BSTR substringData(
    long offset,
    long count );
  HRESULT appendData(
    BSTR data );
  HRESULT insertData(
    long offset,
    BSTR data );
  HRESULT deleteData(
    long offset,
    long count );
  HRESULT replaceData(
    long offset,
    long count,
    BSTR data );
};
struct __declspec(uuid("2933bf87-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMText : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  BSTR Getdata( );
  HRESULT Putdata(
    BSTR rhs );
  long Getlength( );
  BSTR substringData(
    long offset,
    long count );
  HRESULT appendData(
    BSTR data );
  HRESULT insertData(
    long offset,
    BSTR data );
  HRESULT deleteData(
    long offset,
    long count );
  HRESULT replaceData(
    long offset,
    long count,
    BSTR data );
  struct IXMLDOMText* splitText(
    long offset );
};
struct __declspec(uuid("3efaa413-272f-11d2-836f-0000f87a7782"))
 IXMLDOMDocumentFragment : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
};
struct __declspec(uuid("2933bf85-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMAttribute : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  BSTR Getname( );
  VARIANT Getvalue( );
  HRESULT Putvalue(
    VARIANT rhs );
};
struct __declspec(uuid("2933bf86-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMElement : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  BSTR GettagName( );
  VARIANT getAttribute(
    BSTR name );
  HRESULT setAttribute(
    BSTR name,
    VARIANT value );
  HRESULT removeAttribute(
    BSTR name );
  struct IXMLDOMAttribute* getAttributeNode(
    BSTR name );
  struct IXMLDOMAttribute* setAttributeNode(
    struct IXMLDOMAttribute* DOMAttribute );
  struct IXMLDOMAttribute* removeAttributeNode(
    struct IXMLDOMAttribute* DOMAttribute );
  struct IXMLDOMNodeList* getElementsByTagName(
    BSTR tagName );
  HRESULT normalize( );
};
struct __declspec(uuid("2933bf8b-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMDocumentType : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  BSTR Getname( );
  struct IXMLDOMNamedNodeMap* Getentities( );
  struct IXMLDOMNamedNodeMap* Getnotations( );
};
struct __declspec(uuid("2933bf81-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMDocument : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
  struct IXMLDOMDocumentType* Getdoctype( );
  struct IXMLDOMImplementation* Getimplementation( );
  struct IXMLDOMElement* GetdocumentElement( );
  HRESULT PutRefdocumentElement(
    struct IXMLDOMElement* rhs );
  struct IXMLDOMElement* createElement(
    BSTR tagName );
  struct IXMLDOMDocumentFragment* createDocumentFragment( );
  struct IXMLDOMText* createTextNode(
    BSTR data );
  struct IXMLDOMComment* createComment(
    BSTR data );
  struct IXMLDOMCDATASection* createCDATASection(
    BSTR data );
  struct IXMLDOMProcessingInstruction* createProcessingInstruction(
    BSTR target,
    BSTR data );
  struct IXMLDOMAttribute* createAttribute(
    BSTR name );
  struct IXMLDOMEntityReference* createEntityReference(
    BSTR name );
  struct IXMLDOMNodeList* getElementsByTagName(
    BSTR tagName );
  struct IXMLDOMNode* createNode(
    VARIANT type,
    BSTR name,
    BSTR namespaceURI );
  struct IXMLDOMNode* nodeFromID(
    BSTR idString );
  boolean load(
    VARIANT xmlSource );
  long GetreadyState( );
  struct IXMLDOMParseError* GetparseError( );
  BSTR Geturl( );
  boolean Getasync( );
  HRESULT Putasync(
    boolean rhs );
  HRESULT abort( );
  boolean loadXML(
    BSTR bstrXML );
  HRESULT save(
    VARIANT destination );
  boolean GetvalidateOnParse( );
  HRESULT PutvalidateOnParse(
    boolean rhs );
  boolean GetresolveExternals( );
  HRESULT PutresolveExternals(
    boolean rhs );
  boolean GetpreserveWhiteSpace( );
  HRESULT PutpreserveWhiteSpace(
    boolean rhs );
  HRESULT Putonreadystatechange(
    VARIANT rhs );
  HRESULT Putondataavailable(
    VARIANT rhs );
  HRESULT Putontransformnode(
    VARIANT rhs );
};
struct __declspec(uuid("2933bf83-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMNamedNodeMap : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct IXMLDOMNode* getNamedItem(
    BSTR name );
  struct IXMLDOMNode* setNamedItem(
    struct IXMLDOMNode* newItem );
  struct IXMLDOMNode* removeNamedItem(
    BSTR name );
  struct IXMLDOMNode* Getitem(
    long index );
  long Getlength( );
  struct IXMLDOMNode* getQualifiedItem(
    BSTR baseName,
    BSTR namespaceURI );
  struct IXMLDOMNode* removeQualifiedItem(
    BSTR baseName,
    BSTR namespaceURI );
  struct IXMLDOMNode* nextNode( );
  HRESULT reset( );
};
struct __declspec(uuid("2933bf82-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMNodeList : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct IXMLDOMNode* Getitem(
    long index );
  long Getlength( );
  struct IXMLDOMNode* nextNode( );
  HRESULT reset( );
};
struct __declspec(uuid("2933bf80-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMNode : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetnodeName( );
  VARIANT GetnodeValue( );
  HRESULT PutnodeValue(
    VARIANT rhs );
  DOMNodeType GetnodeType( );
  struct IXMLDOMNode* GetparentNode( );
  struct IXMLDOMNodeList* GetchildNodes( );
  struct IXMLDOMNode* GetfirstChild( );
  struct IXMLDOMNode* GetlastChild( );
  struct IXMLDOMNode* GetpreviousSibling( );
  struct IXMLDOMNode* GetnextSibling( );
  struct IXMLDOMNamedNodeMap* Getattributes( );
  struct IXMLDOMNode* insertBefore(
    struct IXMLDOMNode* newChild,
    VARIANT refChild );
  struct IXMLDOMNode* replaceChild(
    struct IXMLDOMNode* newChild,
    struct IXMLDOMNode* oldChild );
  struct IXMLDOMNode* removeChild(
    struct IXMLDOMNode* childNode );
  struct IXMLDOMNode* appendChild(
    struct IXMLDOMNode* newChild );
  boolean hasChildNodes( );
  struct IXMLDOMDocument* GetownerDocument( );
  struct IXMLDOMNode* cloneNode(
    boolean deep );
  BSTR GetnodeTypeString( );
  BSTR Gettext( );
  HRESULT Puttext(
    BSTR rhs );
  boolean Getspecified( );
  struct IXMLDOMNode* Getdefinition( );
  VARIANT GetnodeTypedValue( );
  HRESULT PutnodeTypedValue(
    VARIANT rhs );
  VARIANT GetdataType( );
  HRESULT PutdataType(
    BSTR rhs );
  BSTR Getxml( );
  BSTR transformNode(
    struct IXMLDOMNode* stylesheet );
  struct IXMLDOMNodeList* selectNodes(
    BSTR queryString );
  struct IXMLDOMNode* selectSingleNode(
    BSTR queryString );
  boolean Getparsed( );
  BSTR GetnamespaceURI( );
  BSTR Getprefix( );
  BSTR GetbaseName( );
  HRESULT transformNodeToObject(
    struct IXMLDOMNode* stylesheet,
    VARIANT outputObject );
};
struct __declspec(uuid("2933bf8f-7b36-11d2-b20e-00c04f983e60"))
 IXMLDOMImplementation : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  boolean hasFeature(
    BSTR feature,
    BSTR version );
};
struct __declspec(uuid("c90352f6-643c-4fbc-bb23-e996eb2d51fd"))
 IMXNamespaceManager : IUnknown
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT putAllowOverride(
    boolean fOverride );
  boolean getAllowOverride( );
  HRESULT reset( );
  HRESULT pushContext( );
  HRESULT pushNodeContext(
    struct IXMLDOMNode* contextNode,
    boolean fDeep );
  HRESULT popContext( );
  HRESULT declarePrefix(
    unsigned short* prefix,
    unsigned short* namespaceURI );
  HRESULT getDeclaredPrefix(
    long nIndex,
    unsigned short* pwchPrefix,
    int* pcchPrefix );
  HRESULT getPrefix(
    unsigned short* pwszNamespaceURI,
    long nIndex,
    unsigned short* pwchPrefix,
    int* pcchPrefix );
  HRESULT getURI(
    unsigned short* pwchPrefix,
    struct IXMLDOMNode* pContextNode,
    unsigned short* pwchUri,
    int* pcchUri );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_putAllowOverride(
    boolean fOverride ) = 0 ;
  virtual HRESULT __stdcall raw_getAllowOverride(
    boolean* fOverride ) = 0 ;
  virtual HRESULT __stdcall raw_reset( ) = 0 ;
  virtual HRESULT __stdcall raw_pushContext( ) = 0 ;
  virtual HRESULT __stdcall raw_pushNodeContext(
    struct IXMLDOMNode* contextNode,
    boolean fDeep ) = 0 ;
  virtual HRESULT __stdcall raw_popContext( ) = 0 ;
  virtual HRESULT __stdcall raw_declarePrefix(
    unsigned short* prefix,
    unsigned short* namespaceURI ) = 0 ;
  virtual HRESULT __stdcall raw_getDeclaredPrefix(
    long nIndex,
    unsigned short* pwchPrefix,
    int* pcchPrefix ) = 0 ;
  virtual HRESULT __stdcall raw_getPrefix(
    unsigned short* pwszNamespaceURI,
    long nIndex,
    unsigned short* pwchPrefix,
    int* pcchPrefix ) = 0 ;
  virtual HRESULT __stdcall raw_getURI(
    unsigned short* pwchPrefix,
    struct IXMLDOMNode* pContextNode,
    unsigned short* pwchUri,
    int* pcchUri ) = 0 ;
};
struct __declspec(uuid("948c5ad3-c58d-11d0-9c0b-00c04fc99c8e"))
 IXMLError : IUnknown
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT GetErrorInfo(
    struct _xml_error* pErrorReturn );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_GetErrorInfo(
    struct _xml_error* pErrorReturn ) = 0 ;
};
struct __declspec(uuid("2b8de2fe-8d2d-11d1-b2fc-00c04fd915a9"))
 IXMLDocument2 : IDispatch
{
  //
  // Property Data : 
  //
  __declspec(property(get=Getroot )) struct IXMLElement2* root;
  __declspec(property(get=Geturl,put=Puturl )) BSTR url;
  __declspec(property(get=GetreadyState )) long readyState;
  __declspec(property(get=Getcharset,put=Putcharset )) BSTR charset;
  __declspec(property(get=Getversion )) BSTR version;
  __declspec(property(get=Getdoctype )) BSTR doctype;
  __declspec(property(get=Getasync,put=Putasync )) boolean async;
  //
  // Wrapper Methods : 
  //
  struct IXMLElement2* Getroot( );
  BSTR Geturl( );
  HRESULT Puturl(
    BSTR p );
  long GetreadyState( );
  BSTR Getcharset( );
  HRESULT Putcharset(
    BSTR p );
  BSTR Getversion( );
  BSTR Getdoctype( );
  struct IXMLElement2* createElement(
    VARIANT vType,
    VARIANT var1 );
  boolean Getasync( );
  HRESULT Putasync(
    boolean pf );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall get_root(
    struct IXMLElement2** p ) = 0 ;
  virtual HRESULT __stdcall get_url(
    BSTR* p ) = 0 ;
  virtual HRESULT __stdcall put_url(
    BSTR p ) = 0 ;
  virtual HRESULT __stdcall get_readyState(
    long* pl ) = 0 ;
  virtual HRESULT __stdcall get_charset(
    BSTR* p ) = 0 ;
  virtual HRESULT __stdcall put_charset(
    BSTR p ) = 0 ;
  virtual HRESULT __stdcall get_version(
    BSTR* p ) = 0 ;
  virtual HRESULT __stdcall get_doctype(
    BSTR* p ) = 0 ;
  virtual HRESULT __stdcall raw_createElement(
    VARIANT vType,
    VARIANT var1,
    struct IXMLElement2** ppElem ) = 0 ;
  virtual HRESULT __stdcall get_async(
    boolean* pf ) = 0 ;
  virtual HRESULT __stdcall put_async(
    boolean pf ) = 0 ;
};
struct __declspec(uuid("862629ac-771a-47b2-8337-4e6843c1be90"))
 ISAXDeclHandler : IUnknown
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT elementDecl(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchModel,
    int cchModel );
  HRESULT attributeDecl(
    unsigned short* pwchElementName,
    int cchElementName,
    unsigned short* pwchAttributeName,
    int cchAttributeName,
    unsigned short* pwchType,
    int cchType,
    unsigned short* pwchValueDefault,
    int cchValueDefault,
    unsigned short* pwchValue,
    int cchValue );
  HRESULT internalEntityDecl(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchValue,
    int cchValue );
  HRESULT externalEntityDecl(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchPublicId,
    int cchPublicId,
    unsigned short* pwchSystemId,
    int cchSystemId );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_elementDecl(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchModel,
    int cchModel ) = 0 ;
  virtual HRESULT __stdcall raw_attributeDecl(
    unsigned short* pwchElementName,
    int cchElementName,
    unsigned short* pwchAttributeName,
    int cchAttributeName,
    unsigned short* pwchType,
    int cchType,
    unsigned short* pwchValueDefault,
    int cchValueDefault,
    unsigned short* pwchValue,
    int cchValue ) = 0 ;
  virtual HRESULT __stdcall raw_internalEntityDecl(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchValue,
    int cchValue ) = 0 ;
  virtual HRESULT __stdcall raw_externalEntityDecl(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchPublicId,
    int cchPublicId,
    unsigned short* pwchSystemId,
    int cchSystemId ) = 0 ;
};
struct __declspec(uuid("7f85d5f5-47a8-4497-bda5-84ba04819ea6"))
 ISAXLexicalHandler : IUnknown
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT startDTD(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchPublicId,
    int cchPublicId,
    unsigned short* pwchSystemId,
    int cchSystemId );
  HRESULT endDTD( );
  HRESULT startEntity(
    unsigned short* pwchName,
    int cchName );
  HRESULT endEntity(
    unsigned short* pwchName,
    int cchName );
  HRESULT startCDATA( );
  HRESULT endCDATA( );
  HRESULT comment(
    unsigned short* pwchChars,
    int cchChars );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_startDTD(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchPublicId,
    int cchPublicId,
    unsigned short* pwchSystemId,
    int cchSystemId ) = 0 ;
  virtual HRESULT __stdcall raw_endDTD( ) = 0 ;
  virtual HRESULT __stdcall raw_startEntity(
    unsigned short* pwchName,
    int cchName ) = 0 ;
  virtual HRESULT __stdcall raw_endEntity(
    unsigned short* pwchName,
    int cchName ) = 0 ;
  virtual HRESULT __stdcall raw_startCDATA( ) = 0 ;
  virtual HRESULT __stdcall raw_endCDATA( ) = 0 ;
  virtual HRESULT __stdcall raw_comment(
    unsigned short* pwchChars,
    int cchChars ) = 0 ;
};
struct __declspec(uuid("a4f96ed0-f829-476e-81c0-cdc7bd2a0802"))
 ISAXXMLReader : IUnknown
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  boolean getFeature(
    unsigned short* pwchName );
  HRESULT putFeature(
    unsigned short* pwchName,
    boolean vfValue );
  VARIANT getProperty(
    unsigned short* pwchName );
  HRESULT putProperty(
    unsigned short* pwchName,
    VARIANT varValue );
  ISAXEntityResolver* getEntityResolver( );
  HRESULT putEntityResolver(
    ISAXEntityResolver* pResolver );
  ISAXContentHandler* getContentHandler( );
  HRESULT putContentHandler(
    ISAXContentHandler* pHandler );
  ISAXDTDHandler* getDTDHandler( );
  HRESULT putDTDHandler(
    ISAXDTDHandler* pHandler );
  ISAXErrorHandler* getErrorHandler( );
  HRESULT putErrorHandler(
    ISAXErrorHandler* pHandler );
  unsigned short* getBaseURL( );
  HRESULT putBaseURL(
    unsigned short* pwchBaseUrl );
  unsigned short* getSecureBaseURL( );
  HRESULT putSecureBaseURL(
    unsigned short* pwchSecureBaseUrl );
  HRESULT parse(
    VARIANT varInput );
  HRESULT parseURL(
    unsigned short* pwchUrl );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_getFeature(
    unsigned short* pwchName,
    boolean* pvfValue ) = 0 ;
  virtual HRESULT __stdcall raw_putFeature(
    unsigned short* pwchName,
    boolean vfValue ) = 0 ;
  virtual HRESULT __stdcall raw_getProperty(
    unsigned short* pwchName,
    VARIANT* pvarValue ) = 0 ;
  virtual HRESULT __stdcall raw_putProperty(
    unsigned short* pwchName,
    VARIANT varValue ) = 0 ;
  virtual HRESULT __stdcall raw_getEntityResolver(
    ISAXEntityResolver** ppResolver ) = 0 ;
  virtual HRESULT __stdcall raw_putEntityResolver(
    ISAXEntityResolver* pResolver ) = 0 ;
  virtual HRESULT __stdcall raw_getContentHandler(
    ISAXContentHandler** ppHandler ) = 0 ;
  virtual HRESULT __stdcall raw_putContentHandler(
    ISAXContentHandler* pHandler ) = 0 ;
  virtual HRESULT __stdcall raw_getDTDHandler(
    ISAXDTDHandler** ppHandler ) = 0 ;
  virtual HRESULT __stdcall raw_putDTDHandler(
    ISAXDTDHandler* pHandler ) = 0 ;
  virtual HRESULT __stdcall raw_getErrorHandler(
    ISAXErrorHandler** ppHandler ) = 0 ;
  virtual HRESULT __stdcall raw_putErrorHandler(
    ISAXErrorHandler* pHandler ) = 0 ;
  virtual HRESULT __stdcall raw_getBaseURL(
    unsigned short** ppwchBaseUrl ) = 0 ;
  virtual HRESULT __stdcall raw_putBaseURL(
    unsigned short* pwchBaseUrl ) = 0 ;
  virtual HRESULT __stdcall raw_getSecureBaseURL(
    unsigned short** ppwchSecureBaseUrl ) = 0 ;
  virtual HRESULT __stdcall raw_putSecureBaseURL(
    unsigned short* pwchSecureBaseUrl ) = 0 ;
  virtual HRESULT __stdcall raw_parse(
    VARIANT varInput ) = 0 ;
  virtual HRESULT __stdcall raw_parseURL(
    unsigned short* pwchUrl ) = 0 ;
};
struct __declspec(uuid("70409222-ca09-4475-acb8-40312fe8d145"))
 ISAXXMLFilter : ISAXXMLReader
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  ISAXXMLReader* getParent( );
  HRESULT putParent(
    ISAXXMLReader* pReader );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_getParent(
    ISAXXMLReader** ppReader ) = 0 ;
  virtual HRESULT __stdcall raw_putParent(
    ISAXXMLReader* pReader ) = 0 ;
};
struct __declspec(uuid("a60511c4-ccf5-479e-98a3-dc8dc545b7d0"))
 ISAXErrorHandler : IUnknown
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT error(
    ISAXLocator* pLocator,
    unsigned short* pwchErrorMessage,
    HRESULT hrErrorCode );
  HRESULT fatalError(
    ISAXLocator* pLocator,
    unsigned short* pwchErrorMessage,
    HRESULT hrErrorCode );
  HRESULT ignorableWarning(
    ISAXLocator* pLocator,
    unsigned short* pwchErrorMessage,
    HRESULT hrErrorCode );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_error(
    ISAXLocator* pLocator,
    unsigned short* pwchErrorMessage,
    HRESULT hrErrorCode ) = 0 ;
  virtual HRESULT __stdcall raw_fatalError(
    ISAXLocator* pLocator,
    unsigned short* pwchErrorMessage,
    HRESULT hrErrorCode ) = 0 ;
  virtual HRESULT __stdcall raw_ignorableWarning(
    ISAXLocator* pLocator,
    unsigned short* pwchErrorMessage,
    HRESULT hrErrorCode ) = 0 ;
};
struct __declspec(uuid("e15c1baf-afb3-4d60-8c36-19a8c45defed"))
 ISAXDTDHandler : IUnknown
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT notationDecl(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchPublicId,
    int cchPublicId,
    unsigned short* pwchSystemId,
    int cchSystemId );
  HRESULT unparsedEntityDecl(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchPublicId,
    int cchPublicId,
    unsigned short* pwchSystemId,
    int cchSystemId,
    unsigned short* pwchNotationName,
    int cchNotationName );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_notationDecl(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchPublicId,
    int cchPublicId,
    unsigned short* pwchSystemId,
    int cchSystemId ) = 0 ;
  virtual HRESULT __stdcall raw_unparsedEntityDecl(
    unsigned short* pwchName,
    int cchName,
    unsigned short* pwchPublicId,
    int cchPublicId,
    unsigned short* pwchSystemId,
    int cchSystemId,
    unsigned short* pwchNotationName,
    int cchNotationName ) = 0 ;
};
struct __declspec(uuid("f078abe1-45d2-4832-91ea-4466ce2f25c9"))
 ISAXAttributes : IUnknown
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  int getLength( );
  HRESULT getURI(
    int nIndex,
    unsigned short** ppwchUri,
    int* pcchUri );
  HRESULT getLocalName(
    int nIndex,
    unsigned short** ppwchLocalName,
    int* pcchLocalName );
  HRESULT getQName(
    int nIndex,
    unsigned short** ppwchQName,
    int* pcchQName );
  HRESULT getName(
    int nIndex,
    unsigned short** ppwchUri,
    int* pcchUri,
    unsigned short** ppwchLocalName,
    int* pcchLocalName,
    unsigned short** ppwchQName,
    int* pcchQName );
  int getIndexFromName(
    unsigned short* pwchUri,
    int cchUri,
    unsigned short* pwchLocalName,
    int cchLocalName );
  int getIndexFromQName(
    unsigned short* pwchQName,
    int cchQName );
  HRESULT getType(
    int nIndex,
    unsigned short** ppwchType,
    int* pcchType );
  HRESULT getTypeFromName(
    unsigned short* pwchUri,
    int cchUri,
    unsigned short* pwchLocalName,
    int cchLocalName,
    unsigned short** ppwchType,
    int* pcchType );
  HRESULT getTypeFromQName(
    unsigned short* pwchQName,
    int cchQName,
    unsigned short** ppwchType,
    int* pcchType );
  HRESULT getValue(
    int nIndex,
    unsigned short** ppwchValue,
    int* pcchValue );
  HRESULT getValueFromName(
    unsigned short* pwchUri,
    int cchUri,
    unsigned short* pwchLocalName,
    int cchLocalName,
    unsigned short** ppwchValue,
    int* pcchValue );
  HRESULT getValueFromQName(
    unsigned short* pwchQName,
    int cchQName,
    unsigned short** ppwchValue,
    int* pcchValue );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_getLength(
    int* pnLength ) = 0 ;
  virtual HRESULT __stdcall raw_getURI(
    int nIndex,
    unsigned short** ppwchUri,
    int* pcchUri ) = 0 ;
  virtual HRESULT __stdcall raw_getLocalName(
    int nIndex,
    unsigned short** ppwchLocalName,
    int* pcchLocalName ) = 0 ;
  virtual HRESULT __stdcall raw_getQName(
    int nIndex,
    unsigned short** ppwchQName,
    int* pcchQName ) = 0 ;
  virtual HRESULT __stdcall raw_getName(
    int nIndex,
    unsigned short** ppwchUri,
    int* pcchUri,
    unsigned short** ppwchLocalName,
    int* pcchLocalName,
    unsigned short** ppwchQName,
    int* pcchQName ) = 0 ;
  virtual HRESULT __stdcall raw_getIndexFromName(
    unsigned short* pwchUri,
    int cchUri,
    unsigned short* pwchLocalName,
    int cchLocalName,
    int* pnIndex ) = 0 ;
  virtual HRESULT __stdcall raw_getIndexFromQName(
    unsigned short* pwchQName,
    int cchQName,
    int* pnIndex ) = 0 ;
  virtual HRESULT __stdcall raw_getType(
    int nIndex,
    unsigned short** ppwchType,
    int* pcchType ) = 0 ;
  virtual HRESULT __stdcall raw_getTypeFromName(
    unsigned short* pwchUri,
    int cchUri,
    unsigned short* pwchLocalName,
    int cchLocalName,
    unsigned short** ppwchType,
    int* pcchType ) = 0 ;
  virtual HRESULT __stdcall raw_getTypeFromQName(
    unsigned short* pwchQName,
    int cchQName,
    unsigned short** ppwchType,
    int* pcchType ) = 0 ;
  virtual HRESULT __stdcall raw_getValue(
    int nIndex,
    unsigned short** ppwchValue,
    int* pcchValue ) = 0 ;
  virtual HRESULT __stdcall raw_getValueFromName(
    unsigned short* pwchUri,
    int cchUri,
    unsigned short* pwchLocalName,
    int cchLocalName,
    unsigned short** ppwchValue,
    int* pcchValue ) = 0 ;
  virtual HRESULT __stdcall raw_getValueFromQName(
    unsigned short* pwchQName,
    int cchQName,
    unsigned short** ppwchValue,
    int* pcchValue ) = 0 ;
};
struct __declspec(uuid("9b7e472a-0de4-4640-bff3-84d38a051c31"))
 ISAXLocator : IUnknown
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  int getColumnNumber( );
  int getLineNumber( );
  unsigned short* getPublicId( );
  unsigned short* getSystemId( );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_getColumnNumber(
    int* pnColumn ) = 0 ;
  virtual HRESULT __stdcall raw_getLineNumber(
    int* pnLine ) = 0 ;
  virtual HRESULT __stdcall raw_getPublicId(
    unsigned short** ppwchPublicId ) = 0 ;
  virtual HRESULT __stdcall raw_getSystemId(
    unsigned short** ppwchSystemId ) = 0 ;
};
struct __declspec(uuid("1545cdfa-9e4e-4497-a8a4-2bf7d0112c44"))
 ISAXContentHandler : IUnknown
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT putDocumentLocator(
    ISAXLocator* pLocator );
  HRESULT startDocument( );
  HRESULT endDocument( );
  HRESULT startPrefixMapping(
    unsigned short* pwchPrefix,
    int cchPrefix,
    unsigned short* pwchUri,
    int cchUri );
  HRESULT endPrefixMapping(
    unsigned short* pwchPrefix,
    int cchPrefix );
  HRESULT startElement(
    unsigned short* pwchNamespaceUri,
    int cchNamespaceUri,
    unsigned short* pwchLocalName,
    int cchLocalName,
    unsigned short* pwchQName,
    int cchQName,
    ISAXAttributes* pAttributes );
  HRESULT endElement(
    unsigned short* pwchNamespaceUri,
    int cchNamespaceUri,
    unsigned short* pwchLocalName,
    int cchLocalName,
    unsigned short* pwchQName,
    int cchQName );
  HRESULT characters(
    unsigned short* pwchChars,
    int cchChars );
  HRESULT ignorableWhitespace(
    unsigned short* pwchChars,
    int cchChars );
  HRESULT processingInstruction(
    unsigned short* pwchTarget,
    int cchTarget,
    unsigned short* pwchData,
    int cchData );
  HRESULT skippedEntity(
    unsigned short* pwchName,
    int cchName );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_putDocumentLocator(
    ISAXLocator* pLocator ) = 0 ;
  virtual HRESULT __stdcall raw_startDocument( ) = 0 ;
  virtual HRESULT __stdcall raw_endDocument( ) = 0 ;
  virtual HRESULT __stdcall raw_startPrefixMapping(
    unsigned short* pwchPrefix,
    int cchPrefix,
    unsigned short* pwchUri,
    int cchUri ) = 0 ;
  virtual HRESULT __stdcall raw_endPrefixMapping(
    unsigned short* pwchPrefix,
    int cchPrefix ) = 0 ;
  virtual HRESULT __stdcall raw_startElement(
    unsigned short* pwchNamespaceUri,
    int cchNamespaceUri,
    unsigned short* pwchLocalName,
    int cchLocalName,
    unsigned short* pwchQName,
    int cchQName,
    ISAXAttributes* pAttributes ) = 0 ;
  virtual HRESULT __stdcall raw_endElement(
    unsigned short* pwchNamespaceUri,
    int cchNamespaceUri,
    unsigned short* pwchLocalName,
    int cchLocalName,
    unsigned short* pwchQName,
    int cchQName ) = 0 ;
  virtual HRESULT __stdcall raw_characters(
    unsigned short* pwchChars,
    int cchChars ) = 0 ;
  virtual HRESULT __stdcall raw_ignorableWhitespace(
    unsigned short* pwchChars,
    int cchChars ) = 0 ;
  virtual HRESULT __stdcall raw_processingInstruction(
    unsigned short* pwchTarget,
    int cchTarget,
    unsigned short* pwchData,
    int cchData ) = 0 ;
  virtual HRESULT __stdcall raw_skippedEntity(
    unsigned short* pwchName,
    int cchName ) = 0 ;
};
struct __declspec(uuid("99bca7bd-e8c4-4d5f-a0cf-6d907901ff07"))
 ISAXEntityResolver : IUnknown
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  VARIANT resolveEntity(
    unsigned short* pwchPublicId,
    unsigned short* pwchSystemId );

  //
  // Raw Methods : 
  //
  virtual HRESULT __stdcall raw_resolveEntity(
    unsigned short* pwchPublicId,
    unsigned short* pwchSystemId,
    VARIANT* pvarInput ) = 0 ;
};

#include "msxml4.tli"

} // namespace MSXML2
#pragma pack(pop)
